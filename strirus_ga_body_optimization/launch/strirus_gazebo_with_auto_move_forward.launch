<launch>
        <arg name="namespace" default="/"/>

        <group ns="$(arg namespace)">
<remap from="/clock" to="/$(arg namespace)/clock"/>
	<!-- args for changing robot params -->
	<arg name="cur_index" default="0"/>
	<arg name="real_number_of_legs" default="10" />
	<arg name="angle_between_legs" default="45" /> <!-- in degree -->
	<arg name="offset_between_legs_waves" default="0" />

 <param name="robot_description"
  command="$(find xacro)/xacro --inorder '$(find strirus_robot_description)/urdf/strirus.xacro'  real_number_of_legs:=$(arg real_number_of_legs) angle_between_legs:=$(arg angle_between_legs) offset_between_legs_wave:=$(arg offset_between_legs_waves)" /> 

	<node name="move_forward" pkg="strirus_ga_body_optimization" type="move_forward.py" respawn="false" output="screen"/>

	<!-- запускаем комнату -->
	<include file="$(find strirus_ga_body_optimization)/launch/empty_world.launch">
		<arg name="world_name" value="$(find strirus_ga_body_optimization)/worlds/testing_area_$(arg cur_index).world"/>
		<arg name="paused" value="false"/>
		<arg name="physics" default="ode"/>
		<arg name="verbose" default="false"/>'
		<arg name="gui" value="false"/>
		<arg name="use_sim_time" value="true"/>
	</include>


			<!-- Spawn a robot into Gazebo -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
   args="-urdf -model strirus -param robot_description">
<remap from="/gazebo/spawn_urdf_model" to="/$(arg namespace)/gazebo/spawn_urdf_model"/>
</node>

	<!--<node name="listener" pkg="strirus_ga_body_optimization" type="listener_class.py" respawn="false" output="screen"/> -->
</group>
</launch>

